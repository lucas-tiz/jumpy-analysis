function v_com = comVel(robot,q)
    % calculate center-of-mass velocity
    l1 = robot.l(1);
    l2 = robot.l(2);
    l3 = robot.l(3);
    l4 = robot.l(4);
    r1 = robot.r(1);
    r2 = robot.r(2);
    r3 = robot.r(3);
    r4 = robot.r(4);
    r5 = robot.r(5);
%     xA0 = q(:,1);
%     yA0 = q(:,2);
    theta1 = q(:,3); 
    theta2 = q(:,4);
    theta3 = q(:,5);
    theta4 = q(:,6);
    theta5 = q(:,7);
    xA0d = q(:,8);
    yA0d = q(:,9);
    theta1d = q(:,10); 
    theta2d = q(:,11);
    theta3d = q(:,12);
    theta4d = q(:,13);
    theta5d = q(:,14);

    v_C1 = [xA0d+(-1).*sin(theta1).*r1.*theta1d,yA0d+cos(theta1).*r1.*theta1d];
%     v_C1 = [(-1).*sin(theta1).*r1.*theta1d,cos(theta1).*r1.*theta1d];

    v_C2 = [xA0d+(-1).*sin(theta1).*l1.*theta1d+(-1).*sin(theta1+theta2).* ...
            r2.*(theta1d+theta2d),yA0d+cos(theta1).*l1.*theta1d+cos(theta1+theta2).* ...
            r2.*(theta1d+theta2d)];
%     v_C2 = [(-1).*sin(theta1).*l1.*theta1d+(-1).*sin(theta1+theta2).*r2.* ...
%         theta1d+(-1).*sin(theta1+theta2).*r2.*theta2d,cos(theta1).*l1.* ...
%         theta1d+cos(theta1+theta2).*r2.*theta1d+cos(theta1+theta2).* ...
%         r2.*theta2d];
    
    v_C3 = [xA0d+(-1).*sin(theta1).*l1.*theta1d+(-1).*sin(theta1+theta2).* ...
        l2.*(theta1d+theta2d)+(-1).*sin(theta1+theta2+theta3).*r3.*( ...
        theta1d+theta2d+theta3d),yA0d+cos(theta1).*l1.*theta1d+cos(theta1+theta2).* ...
        l2.*(theta1d+theta2d)+cos(theta1+theta2+theta3).*r3.*(theta1d+theta2d+theta3d)];
%     v_C3 = [(-1).*sin(theta1).*l1.*theta1d+(-1).*sin(theta1+theta2).*l2.* ...
%         theta1d+(-1).*sin(theta1+theta2+theta3).*r3.*theta1d+(-1).*sin( ...
%         theta1+theta2).*l2.*theta2d+(-1).*sin(theta1+theta2+theta3).* ...
%         r3.*theta2d+(-1).*sin(theta1+theta2+theta3).*r3.*theta3d,cos( ...
%         theta1).*l1.*theta1d+cos(theta1+theta2).*l2.*theta1d+cos(theta1+theta2+theta3).* ...
%         r3.*theta1d+cos(theta1+theta2).*l2.*theta2d+cos(theta1+theta2+theta3).* ...
%         r3.*theta2d+cos(theta1+theta2+theta3).*r3.*theta3d];


    v_C4 = [xA0d+(-1).*sin(theta1).*l1.*theta1d+(-1).*sin(theta1+theta2).* ...
        l2.*(theta1d+theta2d)+(-1).*sin(theta1+theta2+theta3).*l3.*( ...
        theta1d+theta2d+theta3d)+(-1).*sin(theta1+theta2+theta3+theta4).* ...
        r4.*(theta1d+theta2d+theta3d+theta4d),yA0d+cos(theta1).*l1.* ...
        theta1d+cos(theta1+theta2).*l2.*(theta1d+theta2d)+cos(theta1+theta2+theta3).* ...
        l3.*(theta1d+theta2d+theta3d)+cos(theta1+theta2+theta3+theta4).* ...
        r4.*(theta1d+theta2d+theta3d+theta4d)];
%     v_C4 = [(-1).*sin(theta1).*l1.*theta1d+(-1).*sin(theta1+theta2).*l2.* ...
%         theta1d+(-1).*sin(theta1+theta2+theta3).*l3.*theta1d+(-1).*sin( ...
%         theta1+theta2+theta3+theta4).*r4.*theta1d+(-1).*sin(theta1+theta2).* ...
%         l2.*theta2d+(-1).*sin(theta1+theta2+theta3).*l3.*theta2d+(-1).* ...
%         sin(theta1+theta2+theta3+theta4).*r4.*theta2d+(-1).*sin(theta1+theta2+theta3).* ...
%         l3.*theta3d+(-1).*sin(theta1+theta2+theta3+theta4).*r4.*theta3d+( ...
%         -1).*sin(theta1+theta2+theta3+theta4).*r4.*theta4d,cos(theta1).* ...
%         l1.*theta1d+cos(theta1+theta2).*l2.*theta1d+cos(theta1+theta2+theta3).* ...
%         l3.*theta1d+cos(theta1+theta2+theta3+theta4).*r4.*theta1d+cos( ...
%         theta1+theta2).*l2.*theta2d+cos(theta1+theta2+theta3).*l3.*theta2d+cos( ...
%         theta1+theta2+theta3+theta4).*r4.*theta2d+cos(theta1+theta2+theta3).* ...
%         l3.*theta3d+cos(theta1+theta2+theta3+theta4).*r4.*theta3d+cos( ...
%         theta1+theta2+theta3+theta4).*r4.*theta4d];

    v_C5 = [xA0d+(-1).*sin(theta1).*l1.*theta1d+(-1).*sin(theta1+theta2).* ...
        l2.*(theta1d+theta2d)+(-1).*sin(theta1+theta2+theta3).*l3.*( ...
        theta1d+theta2d+theta3d)+(-1).*sin(theta1+theta2+theta3+theta4).* ...
        l4.*(theta1d+theta2d+theta3d+theta4d)+(-1).*sin(theta1+theta2+theta3+theta4+theta5).* ...
        r5.*(theta1d+theta2d+theta3d+theta4d+theta5d),yA0d+cos(theta1).* ...
        l1.*theta1d+cos(theta1+theta2).*l2.*(theta1d+theta2d)+cos(theta1+theta2+theta3).* ...
        l3.*(theta1d+theta2d+theta3d)+cos(theta1+theta2+theta3+theta4).* ...
        l4.*(theta1d+theta2d+theta3d+theta4d)+cos(theta1+theta2+theta3+theta4+theta5).* ...
        r5.*(theta1d+theta2d+theta3d+theta4d+theta5d)];
%     v_C5 = [(-1).*sin(theta1).*l1.*theta1d+(-1).*sin(theta1+theta2).*l2.* ...
%         theta1d+(-1).*sin(theta1+theta2+theta3).*l3.*theta1d+(-1).*sin( ...
%         theta1+theta2+theta3+theta4).*l4.*theta1d+(-1).*sin(theta1+theta2+theta3+theta4+theta5).* ...
%         r5.*theta1d+(-1).*sin(theta1+theta2).*l2.*theta2d+(-1).*sin( ...
%         theta1+theta2+theta3).*l3.*theta2d+(-1).*sin(theta1+theta2+theta3+theta4).* ...
%         l4.*theta2d+(-1).*sin(theta1+theta2+theta3+theta4+theta5).*r5.* ...
%         theta2d+(-1).*sin(theta1+theta2+theta3).*l3.*theta3d+(-1).*sin( ...
%         theta1+theta2+theta3+theta4).*l4.*theta3d+(-1).*sin(theta1+theta2+theta3+theta4+theta5).* ...
%         r5.*theta3d+(-1).*sin(theta1+theta2+theta3+theta4).*l4.*theta4d+( ...
%         -1).*sin(theta1+theta2+theta3+theta4+theta5).*r5.*theta4d+(-1).* ...
%         sin(theta1+theta2+theta3+theta4+theta5).*r5.*theta5d,cos(theta1).* ...
%         l1.*theta1d+cos(theta1+theta2).*l2.*theta1d+cos(theta1+theta2+theta3).* ...
%         l3.*theta1d+cos(theta1+theta2+theta3+theta4).*l4.*theta1d+cos( ...
%         theta1+theta2+theta3+theta4+theta5).*r5.*theta1d+cos(theta1+theta2).* ...
%         l2.*theta2d+cos(theta1+theta2+theta3).*l3.*theta2d+cos(theta1+theta2+theta3+theta4).* ...
%         l4.*theta2d+cos(theta1+theta2+theta3+theta4+theta5).*r5.*theta2d+cos( ...
%         theta1+theta2+theta3).*l3.*theta3d+cos(theta1+theta2+theta3+theta4).* ...
%         l4.*theta3d+cos(theta1+theta2+theta3+theta4+theta5).*r5.*theta3d+cos( ...
%         theta1+theta2+theta3+theta4).*l4.*theta4d+cos(theta1+theta2+theta3+theta4+theta5).* ...
%         r5.*theta4d+cos(theta1+theta2+theta3+theta4+theta5).*r5.*theta5d];

    v_com_x = (v_C1(:,1)*robot.m(1) + v_C2(:,1)*robot.m(2) + ...
        v_C3(:,1)*robot.m(3) + v_C4(:,1)*robot.m(4) + ...
        v_C5(:,1)*robot.m(5)) / sum(robot.m);
    v_com_y = (v_C1(:,2)*robot.m(1) + v_C2(:,2)*robot.m(2) + ...
        v_C3(:,2)*robot.m(3) + v_C4(:,2)*robot.m(4) + ...
        v_C5(:,2)*robot.m(5)) / sum(robot.m);
    v_com = [v_com_x, v_com_y];
end